//
// Created by whs31 on 11/2/2023.
//

#pragma once

#include <string>
#include <Libra/Global>

using std::string;

namespace HSA
{
  struct UAVMetadata
  {
    u8 id;
    string name;
  };

  struct Telemetry
  {
    f64 latitude;                   ///< Широта в градусах                                                  `[-90..90]`
    f64 longitude;                  ///< Долгота в градусах                                                 `[-180..180]`
    f64 latitude_d;                 ///< Заданная широта в градусах                                         `[-90..90]`
    f64 longitude_d;                ///< Заданная долгота в градусах                                        `[-180..180]`
    f32 altitude;                   ///< Высота в метрах (соответствует высоте, исп. автопилотом)           `[-1000..1000]`
    f32 altitude_abs;               ///< Высота в метрах с датчика абс. высоты (GPS/барометр)               `[-1000..1000]`
    u16 altitude_d;                 ///< Заданная высота в метрах                                           `[0..1000]`
    u64 timestamp;                  ///< Временная метка в миллисекундах                                    `[0..u64ₘₐₓ]`
    f32 acceleration_x;             ///< Продольное ускорение в м/с²                                        `[-10⁴..10⁴]`
    f32 acceleration_y;             ///< Поперечное ускорение в м/с²                                        `[-10⁴..10⁴]`
    f32 acceleration_z;             ///< Вертикальное ускорение в м/с²                                      `[-10⁴..10⁴]`
    f32 col_pitch;                  ///< Шаг основного винта в градусах, деленных на 10                     `[-10..10]`
    f32 pitch;                      ///< Тангаж в радианах                                                  `[-π..π]`
    f32 roll;                       ///< Крен в радианах                                                    `[-π..π]`
    f32 yaw;                        ///< Курс в радианах                                                    `[0..2π]`
    f32 target_altitude;            ///< Высота, определенная через задатчик в метрах                       `[-1000..1000]`
    f32 target_speed;               ///< Скорость, определенная через задатчик в м/с                        `[-1000..1000]`
    f32 throttle;                   ///< Газ                                                                `[0..1]`
    f32 vx;                         ///< Скорость по продольной оси в м/с                                   `[-1000..1000]`
    f32 vy;                         ///< Скорость по поперечной оси в м/с                                   `[-1000..1000]`
    f32 vz;                         ///< Скорость по вертикальной оси в м/с                                 `[-1000..1000]`
    i16 route_point;                ///< Номер текущей маршрутной точки                                     `[-1..i16ₘₐₓ]
    u8 route;                       ///< Номер текущего маршрута                                            `[0..u8ₘₐₓ]`
    u16 rpm_engine;                 ///< Обороты в минуту первого двигателя                                 `[0..u16ₘₐₓ]`
    u16 rpm_engine2;                ///< Обороты в минуту второго двигателя                                 `[0..u16ₘₐₓ]`
    u16 rpm_rotor;                  ///< Обороты в минуту основного винта                                   `[0..u16ₘₐₓ]`
    u16 rpm_tail;                   ///< Обороты в минуту хвостового винта                                  `[0..u16ₘₐₓ]`
    u8 engine_state;                ///< Режим работы двигателя                                             `[0..u8ₘₐₓ]`
    u8 mode;                        ///< Режим работы автопилота                                            `[0..u8ₘₐₓ]`
    u8 overriders_state;            ///< Битовая маска задатчиков                                           `[0..u8ₘₐₓ]`
    u8 override_altitude;
    u8 override_velocity;
    u8 override_yaw;
    u8 override_vz;
  };

  struct [[maybe_unused]] TelemetrySecondary
  {
    f32 altitude_barometric;        ///< Высота по барометру                                                `[-1000..1000]`
    f32 altitude_gps;               ///< Высота по GPS                                                      `[-1000..1000]`
    f32 altitude_radio;             ///< Высота по радиовысотомеру                                          `[0..200]`
    f32 gps_course_error;           ///< Погрешность курса по GPS                                           `[-1000..1000]`
    f32 gps_velocity_error;         ///< Погрешность скорости по GPS                                        `[-1000..1000]`
    f32 roll_velocity;              ///< Угловая скорость по оси крена в радианах в секунду                 `[-100..100]`
    f32 roll_velocity_error;        ///< Упр. действие САУ для стабилизации по оси крена                    `[-1..1]`
    f32 pitch_velocity;             ///< Угловая скорость по оси тангажа в радианах в секунду               `[-100..100]`
    f32 pitch_velocity_error;       ///< Упр. действие САУ для стабилизации по оси тангажа                  `[-1..1]`
    f32 yaw_velocity;               ///< Угловая скорость по оси курса в радианах в секунду                 `[-100..100]`
    f32 yaw_velocity_error;         ///< Упр. действие САУ для стабилизации по оси курса                    `[-1..1]`
    f32 position_x;                 ///< Позиция в метрах по оси, напр. на восток, отн. нач. точки          `[-10⁵..10⁵]`
    f32 position_x_error;           ///< Погрешность по позиции по оси, напр. на восток                     `[-1000..1000]`
    f32 position_x_target;          ///< Заданная позиция в м по оси, напр. на восток                       `[-10⁵..10⁵]`
    f32 position_y;                 ///< Позиция в метрах по оси, напр. на север, отн. нач. точки           `[-10⁵..10⁵]`
    f32 position_y_error;           ///< Погрешность по позиции по оси, напр. на север                      `[-1000..1000]`
    f32 position_y_target;          ///< Заданная позиция в м по оси, напр. на север                        `[-10⁵..10⁵]`
    f32 position_z_error;           ///< Погрешность по позиции по оси, напр. вниз                          `[-1000..1000]`
    f32 signal_roll;                ///< Значение сигнала по крену с радиоуправления                        `[-1..1]`
    f32 signal_pitch;               ///< Значение сигнала по тангажу с радиоуправления                      `[-1..1]`
    f32 signal_yaw;                 ///< Значение сигнала по курсу с радиоуправления                        `[-1..1]`
    f32 signal_throttle;            ///< Значение сигнала по газу/шагу с радиоуправления                    `[-1..1]`
    f32 target_roll_velocity;       ///< Заданное знач. в рад/с по гироскопической скорости по оси крена    `[-100..100]`
    f32 target_pitch_velocity;      ///< Заданное знач. в рад/с по гироскопической скорости по оси тангажа  `[-100..100]`
    f32 target_yaw_velocity;        ///< Заданное знач. в рад/с по гироскопической скорости по оси курса    `[-100..100]`
    f32 target_altitude;            ///< Заданное знач. в рад/с по высоте в метрах                          `[-1000..1000]`
    f32 target_roll;                ///< Заданное знач. крена в радианах                                    `[-π..π]`
    f32 target_pitch;               ///< Заданное знач. тангажа в радианах                                  `[-π..π]`
    f32 target_yaw;                 ///< Заданное знач. по курсу в радианах                                 `[0..2π]`
    f32 target_vx;                  ///< Заданное знач. по поперечной скорости в м/с                        `[-100..100]`
    f32 target_vy;                  ///< Заданное знач. по продольной скорости в м/с                        `[-100..100]`
    f32 target_vz;                  ///< Заданное знач. по вертикальной скорости в м/с                      `[-100..100]`
    f32 target_position_x;          ///< Заданное знач. позиции в м по оси, напр. на восток                 `[-100..100]`
    f32 target_position_y;          ///< Заданное знач. позиции в м по оси, напр. на север                  `[-100..100]`
    f32 velocity_x_error;           ///< Погрешность скорости по оси, напр. на восток                       `[-1000..1000]`
    f32 velocity_y_error;           ///< Погрешность скорости по оси, напр. на север                        `[-1000..1000]`
    f32 velocity_z_error;           ///< Погрешность скорости по оси, напр. вниз                            `[-1000..1000]`
  };

  struct Datagram
  {
    UAVMetadata metadata;
    Telemetry telemetry;
  };
} // HSA
